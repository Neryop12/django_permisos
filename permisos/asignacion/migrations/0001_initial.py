# Generated by Django 2.2.1 on 2019-07-23 17:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('accountsid', models.CharField(db_column='AccountsID', max_length=200, primary_key=True, serialize=False)),
                ('account', models.CharField(blank=True, db_column='Account', max_length=200, null=True)),
                ('media', models.CharField(blank=True, db_column='Media', max_length=45, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adid', models.CharField(blank=True, db_column='AdID', max_length=45, null=True)),
                ('adname', models.CharField(blank=True, db_column='Adname', max_length=200, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=200, null=True)),
                ('adstatus', models.CharField(blank=True, db_column='Adstatus', max_length=200, null=True)),
                ('adsetid', models.CharField(blank=True, db_column='AdSetID', max_length=45, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'ads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adsetmetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reach', models.IntegerField(blank=True, db_column='Reach', null=True)),
                ('frequency', models.FloatField(blank=True, db_column='Frequency', null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=45, null=True)),
                ('adsetname', models.CharField(blank=True, db_column='AdSetname', max_length=45, null=True)),
                ('adsetid', models.CharField(blank=True, db_column='AdSetID', max_length=45, null=True)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
                ('impressions', models.IntegerField(blank=True, db_column='Impressions', null=True)),
                ('clicks', models.CharField(blank=True, db_column='Clicks', max_length=45, null=True)),
            ],
            options={
                'db_table': 'adsetmetrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adsets',
            fields=[
                ('adsetid', models.CharField(db_column='AdSetID', max_length=45, primary_key=True, serialize=False)),
                ('adsetname', models.CharField(blank=True, db_column='Adsetname', max_length=200, null=True)),
                ('adsetlifetimebudget', models.FloatField(blank=True, db_column='Adsetlifetimebudget', null=True)),
                ('adsetdailybudget', models.FloatField(blank=True, db_column='Adsetdailybudget', null=True)),
                ('adsettargeting', models.TextField(blank=True, db_column='Adsettargeting', null=True)),
                ('adsetend', models.DateField(blank=True, db_column='Adsetend', null=True)),
                ('adsetstart', models.DateField(blank=True, db_column='Adsetstart', null=True)),
                ('typeadset', models.IntegerField(blank=True, db_column='TypeAdSet', null=True)),
                ('campaingid', models.CharField(blank=True, db_column='CampaingID', max_length=45, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'adsets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Campaingdisplay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisherplatform', models.CharField(blank=True, db_column='Publisherplatform', max_length=45, null=True)),
                ('placement', models.CharField(blank=True, db_column='Placement', max_length=200, null=True)),
                ('campaingid', models.CharField(blank=True, db_column='CampaingID', max_length=45, null=True)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
            ],
            options={
                'db_table': 'campaingdisplay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Campaingmetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reach', models.IntegerField(blank=True, db_column='Reach', null=True)),
                ('frequency', models.FloatField(blank=True, db_column='Frequency', null=True)),
                ('cost', models.FloatField(blank=True, db_column='Cost', null=True)),
                ('clicks', models.IntegerField(blank=True, db_column='Clicks', null=True)),
                ('percentofbudgetused', models.FloatField(blank=True, db_column='Percentofbudgetused', null=True)),
                ('impressions', models.IntegerField(blank=True, db_column='Impressions', null=True)),
                ('placement', models.CharField(blank=True, db_column='Placement', max_length=45, null=True)),
                ('campaingid', models.CharField(blank=True, db_column='CampaingID', max_length=45, null=True)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
            ],
            options={
                'db_table': 'campaingmetrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Campaings',
            fields=[
                ('campaingid', models.CharField(db_column='CampaingID', max_length=45, primary_key=True, serialize=False)),
                ('campaingname', models.CharField(blank=True, db_column='Campaingname', max_length=200, null=True)),
                ('campaignspendinglimit', models.FloatField(blank=True, db_column='Campaignspendinglimit', null=True)),
                ('campaigndailybudget', models.FloatField(blank=True, db_column='Campaigndailybudget', null=True)),
                ('campaignlifetimebudget', models.FloatField(blank=True, db_column='Campaignlifetimebudget', null=True)),
                ('campaignobjective', models.CharField(blank=True, db_column='Campaignobjective', max_length=200, null=True)),
                ('campaignstatus', models.CharField(blank=True, db_column='Campaignstatus', max_length=200, null=True)),
                ('cost', models.FloatField(blank=True, db_column='Cost', null=True)),
                ('accountsid', models.CharField(blank=True, db_column='AccountsID', max_length=45, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
            ],
            options={
                'db_table': 'campaings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Creativeads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adcreativeid', models.CharField(blank=True, db_column='AdcreativeID', max_length=45, null=True)),
                ('creativename', models.CharField(blank=True, db_column='Creativename', max_length=200, null=True)),
                ('linktopromotedpost', models.CharField(blank=True, db_column='Linktopromotedpost', max_length=500, null=True)),
                ('adcreativethumbnailurl', models.CharField(blank=True, db_column='AdcreativethumbnailURL', max_length=500, null=True)),
                ('adcreativeimageurl', models.CharField(blank=True, db_column='AdcreativeimageURL', max_length=500, null=True)),
                ('externaldestinationurl', models.CharField(blank=True, db_column='ExternaldestinationURL', max_length=500, null=True)),
                ('adcreativeobjecttype', models.CharField(blank=True, db_column='Adcreativeobjecttype', max_length=200, null=True)),
                ('promotedpostid', models.IntegerField(blank=True, db_column='PromotedpostID', null=True)),
                ('promotedpostname', models.CharField(blank=True, db_column='Promotedpostname', max_length=200, null=True)),
                ('promotedpostinstagramid', models.IntegerField(blank=True, db_column='PromotedpostInstagramID', null=True)),
                ('promotedpostmessage', models.CharField(blank=True, db_column='Promotedpostmessage', max_length=200, null=True)),
                ('promotedpostcaption', models.CharField(blank=True, db_column='Promotedpostcaption', max_length=500, null=True)),
                ('promotedpostdestinationurl', models.CharField(blank=True, db_column='PromotedpostdestinationURL', max_length=500, null=True)),
                ('promotedpostimageurl', models.CharField(blank=True, db_column='PromotedpostimageURL', max_length=500, null=True)),
                ('linktopromotedinstagrampost', models.CharField(blank=True, db_column='LinktopromotedInstagrampost', max_length=200, null=True)),
                ('adid', models.CharField(blank=True, db_column='AdID', max_length=45, null=True)),
                ('adname', models.CharField(blank=True, db_column='Adname', max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'creativeads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Errorscampaings',
            fields=[
                ('iderrorscampaings', models.AutoField(db_column='idErrorsCampaings', primary_key=True, serialize=False)),
                ('error', models.CharField(blank=True, db_column='Error', max_length=500, null=True)),
                ('comentario', models.CharField(blank=True, db_column='Comentario', max_length=500, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='Estado', null=True)),
                ('media', models.CharField(blank=True, db_column='Media', max_length=16, null=True)),
                ('tipoerrorid', models.IntegerField(blank=True, db_column='TipoErrorID', null=True)),
                ('campaingid', models.CharField(blank=True, db_column='CampaingID', max_length=200, null=True)),
                ('usuariovalidacion', models.IntegerField(blank=True, db_column='UsuarioValidacion', null=True)),
                ('impressions', models.IntegerField(blank=True, db_column='Impressions', null=True)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
            ],
            options={
                'db_table': 'errorscampaings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metricsads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impressions', models.IntegerField(blank=True, db_column='Impressions', null=True)),
                ('ctr', models.FloatField(blank=True, db_column='Ctr', null=True)),
                ('cpm', models.FloatField(blank=True, db_column='Cpm', null=True)),
                ('cro', models.FloatField(blank=True, db_column='Cro', null=True)),
                ('cost', models.FloatField(blank=True, db_column='Cost', null=True)),
                ('frequency', models.FloatField(blank=True, db_column='Frequency', null=True)),
                ('reach', models.IntegerField(blank=True, db_column='Reach', null=True)),
                ('pagelikes', models.IntegerField(blank=True, db_column='Pagelikes', null=True)),
                ('peopletakingaction', models.IntegerField(blank=True, db_column='Peopletakingaction', null=True)),
                ('postreactions', models.IntegerField(blank=True, db_column='Postreactions', null=True)),
                ('postshares', models.IntegerField(blank=True, db_column='Postshares', null=True)),
                ('photoviews', models.IntegerField(blank=True, db_column='Photoviews', null=True)),
                ('clickstoplayvideo', models.IntegerField(blank=True, db_column='Clickstoplayvideo', null=True)),
                ('outboundclicks', models.IntegerField(blank=True, db_column='Outboundclicks', null=True)),
                ('leads', models.IntegerField(blank=True, db_column='Leads', null=True)),
                ('convertions', models.IntegerField(blank=True, db_column='Convertions', null=True)),
                ('eventresponses', models.IntegerField(blank=True, db_column='Eventresponses', null=True)),
                ('messagingreplies', models.IntegerField(blank=True, db_column='Messagingreplies', null=True)),
                ('videowatchesat75', models.IntegerField(blank=True, db_column='Videowatchesat75', null=True)),
                ('videowatchesat100', models.IntegerField(blank=True, db_column='Videowatchesat100', null=True)),
                ('websiteleads', models.IntegerField(blank=True, db_column='Websiteleads', null=True)),
                ('desktopappinstalls', models.IntegerField(blank=True, db_column='Desktopappinstalls', null=True)),
                ('mobileappinstalls', models.IntegerField(blank=True, db_column='Mobileappinstalls', null=True)),
                ('adid', models.CharField(blank=True, db_column='AdID', max_length=45, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=45, null=True)),
                ('adname', models.CharField(blank=True, db_column='Adname', max_length=200, null=True)),
                ('clicks', models.IntegerField(blank=True, db_column='Clicks', null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'metricsads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Platformsclientes',
            fields=[
                ('platformclienteid', models.IntegerField(db_column='PlatformClienteID', primary_key=True, serialize=False)),
                ('clienteid', models.IntegerField(blank=True, db_column='ClienteID', null=True)),
                ('accountsid', models.IntegerField(blank=True, db_column='AccountsID', null=True)),
            ],
            options={
                'db_table': 'platformsclientes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tiposerrores',
            fields=[
                ('tipoerrorid', models.AutoField(db_column='TipoErrorID', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(blank=True, db_column='Descripcion', max_length=100, null=True)),
                ('icono', models.CharField(blank=True, db_column='Icono', max_length=45, null=True)),
                ('tipousuario', models.IntegerField(blank=True, db_column='TipoUsuario', null=True)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
            ],
            options={
                'db_table': 'tiposerrores',
                'managed': False,
            },
        ),
    ]
